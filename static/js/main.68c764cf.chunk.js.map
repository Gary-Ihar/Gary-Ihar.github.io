{"version":3,"sources":["assets/img sync /^/.*/.png$","assets/img/foto.png","assets/theme/color.js","assets/theme/styled-components.js","store/product-store.js","components/filter-input.js","views/form.js","components/image.js","components/product-card.js","views/products.js","views/app.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","color","Text","styled","p","themeColor","bold","size","productsStore","store","products","filter","filteredProducts","filterParams","isLoad","makeAutoObservable","this","axios","get","then","res","data","filters","items","param","checked","editFilter","prm","filterProducts","length","filtered","product","title","split","splice","join","toLowerCase","includes","FilterInput","idGoods","Input","type","name","onChange","filterParam","target","div","Form","observer","FormStyle","className","i","value","Image","imgName","alt","height","ImgStyle","src","require","default","img","ProductCard","CardStyle","width","productCardWidth","bColor","is_new","IsNew","Content","price","slice","is_second_hand","PayButton","borderColor","BGColor","button","Products","useEffect","productsFetch","Container","getProducts","App","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68c764cf.chunk.js","sourcesContent":["var map = {\n\t\"./foto.png\": 57\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 56;","export default __webpack_public_path__ + \"static/media/foto.3884aee6.png\";","export const color = {\r\n  helper_text: \"#898989\",\r\n  header_text: \"#1B1B1B\",\r\n  white: \"#FFFFFF\",\r\n  border_product_card_color: \"#E6E6E6\",\r\n  border_button_color: \"#DBDBDB\",\r\n  main_text: \"#1B1B1B\",\r\n  new_product_bg_color: \"#44C477\",\r\n};\r\n// TODO: нейминг переменных моя беда, но я стараюсь! :)\r\n","import styled from \"styled-components\";\r\nimport { color as themeColor } from \"./color\";\r\n\r\nexport const Text = styled.p`\r\n  font-family: Montserrat;\r\n  color: ${({ color }) => color || themeColor.main_text};\r\n  font-weight: ${({ bold }) => (bold ? 700 : 500)};\r\n  font-size: ${({ size }) => size};\r\n`;\r\n// TODO: Я думаю, что тут достойны находится еще компонеты кнопки и наверное как-то продумать карточку товара.\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nconst URL = \"https://getlens-master.stage.dev.family/api/pages/kamery\";\r\n\r\n//TODO: Стор скорее всего - кракозябра. Но я учусь! :)\r\nclass Products {\r\n  store = {\r\n    products: [],\r\n    filter: [],\r\n  };\r\n  filteredProducts = [];\r\n  filterParams = [];\r\n  isLoad = false;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async productsFetch() {\r\n    if (!this.isLoad) {\r\n      await axios.get(URL).then((res) => {\r\n        this.store = {\r\n          products: res.data.products,\r\n          filter: res.data.filters[3].items,\r\n        };\r\n        this.isLoad = true;\r\n      });\r\n    }\r\n  }\r\n\r\n  filterParam(param, checked) {\r\n    if (checked) {\r\n      this.filterParams = [...this.filterParams, param];\r\n    } else {\r\n      const editFilter = this.filterParams.filter((prm) => prm !== param);\r\n      this.filterParams = editFilter;\r\n    }\r\n    this.filterProducts();\r\n  }\r\n\r\n  filterProducts() {\r\n    if (this.filterParams.length === 0) {\r\n      this.filteredProducts = this.store.products;\r\n    } else {\r\n      const filtered = this.store.products.filter((product) => {\r\n        const title = product.title\r\n          .split(\" \")\r\n          .splice(0, 2)\r\n          .join(\" \")\r\n          .toLowerCase();\r\n        return this.filterParams.includes(title);\r\n      });\r\n      this.filteredProducts = filtered;\r\n    }\r\n  }\r\n\r\n  getProducts() {\r\n    if (this.filteredProducts.length > 0) {\r\n      return this.filteredProducts;\r\n    } else {\r\n      return this.store.products;\r\n    }\r\n  }\r\n}\r\n\r\nexport const productsStore = new Products();\r\n\r\n// TODO: Ниже представлена модель корзины с товарами. Я просто уже особо красиво возможно не успею это доделать. Простите.\r\n// Но в компоненту карточки товара я принес все данные, для того, что бы вызвать метод addToBasket(товар) на кнопке и загнать выбранный товар в стор.\r\n// Тем более надо как-то продумать вариант изменения кнопки с \"В корзину\" на \"Добавлено(например)\". Самое, что быстро приходит в голову это в самой компоненте\r\n// карточки товара профильтровать два массива, что в баскете, что в основоном сторе. Это прям очень грязно и так с ходу не придумал. А может прямо локально в карточке собственный стейт завести на кнопку\r\n// и добавить валидаций. Это надо хорошо подумать и на это надо время :( Хотя возможно последний вариант и будет самым оптимальным легко и просто, KISS, все дела... :)\r\n//\r\n// class Basket {\r\n//     basket = []\r\n//\r\n//     constructor(){\r\n//         makeAutoObservable(this)\r\n//     }\r\n//\r\n//     addToBasket(goods) {\r\n//         this.basket.push(goods)\r\n//     }\r\n//\r\n//     removeFromBasket(goods){\r\n//         this.basket.filter(item=> item.id !== goods.id)\r\n//     }\r\n// }\r\n//\r\n// export const basketStore = new Basket()\r\n","import React from \"react\";\r\nimport { Text } from \"../assets/theme/styled-components\";\r\nimport { color } from \"../assets/theme/color\";\r\nimport styled from \"styled-components\";\r\nimport { productsStore } from \"../store/product-store\";\r\n// TODO: Вообще наверное лучше завернуть инпут в тег label чтобы можно было еще кастомизировать сам чекбокс. Но по макету это не нужно вроде как.\r\nconst FilterInput = ({ title, idGoods }) => {\r\n  return (\r\n    <Input>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={idGoods.toLowerCase()}\r\n        onChange={(e) =>\r\n          productsStore.filterParam(e.target.name, e.target.checked)\r\n        }\r\n      />\r\n      <Text color={color.main_text} size=\"14px\">\r\n        {title}\r\n      </Text>\r\n    </Input>\r\n  );\r\n};\r\n\r\nexport default FilterInput;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  input {\r\n    margin-right: 9px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { color } from \"../assets/theme/color\";\r\nimport { Text } from \"../assets/theme/styled-components\";\r\nimport { observer } from \"mobx-react\";\r\nimport { productsStore } from \"../store/product-store\";\r\nimport FilterInput from \"../components/filter-input\";\r\n\r\nconst Form = observer(() => {\r\n  return (\r\n    <FormStyle>\r\n      <Text color={color.helper_text} size=\"14px\">\r\n        Товаров {productsStore.store.products.length}\r\n      </Text>\r\n      <Text color={color.header_text} size=\"32px\" bold>\r\n        Камеры\r\n      </Text>\r\n      <Text color={color.header_text} size=\"16px\" bold>\r\n        Цена, ₽\r\n      </Text>\r\n      {/* TODO: Тут чет с ценами магию сотворить. */}\r\n      {/* TODO: Такс. Вот сразу не понял и закопал себя в яму... Скорее всего это не слайдер(ток устно смогу объяснить почему я так думаю), а просто два инпута с диапазонами. Ок. В принципе это не тяжело Двойное условие панику не вызывает:) . \r\n      Но прикрутить это к текущей реализации будет муторно.\r\n      Я пока еще испытываю проблемы, чтобы со старта спроектировать всю систему. Наверное это недостаток опыта. Но я постоянно чет читаю, подсматриваю и т.д. :) */}\r\n      {/* TODO: Также я не понял откуда берутся два чекбокса с \"Новинка\" и \"Акция\". Добавить это не трудно. Нужно пересобрать метод filterProducts() в сторе. Но куда добавить эти кнопки... */}\r\n      <Text color={color.header_text} size=\"16px\" bold className=\"brand-header\">\r\n        Бренд\r\n      </Text>\r\n      {productsStore.store.filter.length > 0 &&\r\n        productsStore.store.filter.map((param, i) => (\r\n          <FilterInput\r\n            key={param.value}\r\n            title={param.title}\r\n            idGoods={`Товар ${i + 1}`}\r\n          />\r\n        ))}\r\n    </FormStyle>\r\n  );\r\n});\r\n\r\nexport default Form;\r\n\r\nconst FormStyle = styled.div`\r\n  width: 100%;\r\n  max-width: 225px;\r\n\r\n  & > p:nth-child(1) {\r\n    margin-bottom: 5px;\r\n  }\r\n  & > p:nth-child(2) {\r\n    margin-bottom: 13px;\r\n  }\r\n  & > p:nth-child(3) {\r\n    margin-bottom: 13px;\r\n  }\r\n  .brand-header {\r\n    margin-bottom: 13px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Image = ({ imgName, alt, height }) => {\r\n  return (\r\n    <ImgStyle\r\n      src={require(`../assets/img/${imgName}.png`).default}\r\n      alt={alt || \"image\"}\r\n      height={height}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Image;\r\n//TODO: Адаптив картинки навреное лучше сиюда прикрутить. С задаваемыми параметрами. Хотя это визуально  может перегрузить саму компоненту пропсами... Не знаю как лучше. Надо попробовать и так и так будет.\r\nconst ImgStyle = styled.img`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  max-height: ${({ height }) => height}px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { productCardWidth } from \"../views/products\";\r\nimport Image from \"./image\";\r\nimport { color } from \"../assets/theme/color\";\r\nimport { Text } from \"../assets/theme/styled-components\";\r\n\r\nconst ProductCard = ({ data }) => {\r\n  return (\r\n    <CardStyle\r\n      width={productCardWidth}\r\n      bColor={color.border_product_card_color}\r\n    >\r\n      {data.is_new && (\r\n        <IsNew>\r\n          <Text size=\"10px\" color={color.white} bold>\r\n            новинка\r\n          </Text>\r\n        </IsNew>\r\n      )}\r\n      <Image imgName=\"foto\" height=\"242\" />\r\n      <Content>\r\n        <Text size=\"14px\" className=\"title\">\r\n          {data.title}\r\n        </Text>\r\n        <div className=\"price-section\">\r\n          <Text size=\"16px\" bold>\r\n            {data.price.slice(0, -3)} ₽\r\n          </Text>\r\n          {/* TODO: У меня не остается времени поставить пробел между цифрами. В этом ниче сложного, я на словах могу накидать как это сделать.\r\n                        Я бы завел хелпер функцию и через нее пропускал бы занчение helper(data.price)*/}\r\n          {data.is_second_hand && <Text size=\"11px\">Новое</Text>}{\" \"}\r\n          {/*TODO: Я не уверен, от чего зависит это */}\r\n        </div>\r\n        {/*TODO: Тут есть сердечко, я не понял логику его появления. Избранное? Но оно не у всех есть... */}\r\n        <PayButton borderColor={color.border_button_color}>В корзину</PayButton>\r\n      </Content>\r\n    </CardStyle>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n\r\nconst CardStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: ${({ width }) => width}px;\r\n  overflow: hidden;\r\n  border: 1px solid ${({ bColor }) => bColor};\r\n  border-radius: 4px;\r\n  .title {\r\n    height: 40px;\r\n    overflow: hidden; // TODO: Текст лучше наверное скриптом обрезать, а не вот так вот.\r\n    margin-bottom: 11px;\r\n  }\r\n  .price-section {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 18px;\r\n  }\r\n  @media screen and (max-width: 578px) {\r\n    flex-direction: row;\r\n    padding: 20px 0;\r\n    border: none;\r\n    border-bottom: 1px solid ${({ bColor }) => bColor};\r\n    overflow: visible;\r\n    border-radius: 0px;\r\n    & > img {\r\n      width: 124px;\r\n      height: 124px;\r\n      border-radius: 4px;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: -1px;\r\n      right: -20px;\r\n      background: ${({ bColor }) => bColor};\r\n      width: 20px;\r\n      height: 1px;\r\n    }\r\n    &:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: -1px;\r\n      left: -20px;\r\n      background: ${({ bColor }) => bColor};\r\n      width: 20px;\r\n      height: 1px;\r\n    }\r\n    .title {\r\n      height: 39px;\r\n    }\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  padding: 12px 16px 16px;\r\n  width: 100%;\r\n  @media screen and (max-width: 578px) {\r\n    padding: 0 0 0 16px;\r\n  }\r\n`;\r\nconst IsNew = styled.div`\r\n  position: absolute;\r\n  top: 12px;\r\n  left: 12px;\r\n  background-color: ${({ BGColor }) => BGColor || color.new_product_bg_color};\r\n  padding: 6px 10px;\r\n  border-radius: 26px;\r\n  @media screen and (max-width: 578px) {\r\n    top: 26px;\r\n    left: 6px;\r\n  }\r\n`;\r\n\r\nconst PayButton = styled.button`\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 10px 15px;\r\n  border: 1px solid ${({ borderColor }) => borderColor};\r\n  cursor: pointer;\r\n  outline: none;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { observer } from \"mobx-react\";\r\nimport { productsStore } from \"../store/product-store\";\r\nimport ProductCard from \"../components/product-card\";\r\n\r\nexport const productCardWidth = 240;\r\n\r\nconst Products = observer(() => {\r\n  useEffect(() => {\r\n    productsStore.productsFetch();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {productsStore.getProducts().map((product) => (\r\n        <ProductCard key={product.id} data={product} />\r\n      ))}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Products;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(${productCardWidth}px, 1fr));\r\n  grid-gap: 24px;\r\n  @media screen and (max-width: 578px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 0px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Form from \"./form\";\r\nimport Products from \"./products\";\r\nimport \"../assets/css/index.css\";\r\n// TODO: До сих пор нет норм способа подключить шрифты в приложение с styled-components.\r\n// Сами авторы просят использовать font-display: fallback https://styled-components.com/docs/faqs#how-do-i-fix-flickering-text-after-server-side-rendering\r\n// Но даже на моей машине при достаточно раздутом проекте можно заметить это мерцание/блики. В нашей приложухе такого не будет. Нет роутинга и много чего еще.\r\n//\r\n// Я не считаю зазорным подрубить старый добрый CSS :)\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <Form />\r\n      <Products />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 1340px;\r\n  padding: 0 20px;\r\n  display: grid;\r\n  grid-template-columns: 225px 1fr;\r\n  grid-column-gap: 40px;\r\n  padding-top: 64px;\r\n  @media screen and (max-width: 578px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: 47px;\r\n    & > div:first-child {\r\n      margin-bottom: 48px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./views/app\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}